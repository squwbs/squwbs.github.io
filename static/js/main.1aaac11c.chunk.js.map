{"version":3,"sources":["actions/postActions.js","components/Form.js","WholeContext.js","components/List.js","components/Header.js","components/Posts.js","components/Postform.js","components/Todo.js","components/Home.js","components/NoMatch.js","components/screens/CatalogueScreen.js","components/screens/CategoryScreen.js","components/screens/ProductScreen.js","components/Navigator.js","components/screens/SearchScreen.js","components/screens/SearchResultsScreen.js","components/screens/BagScreen.js","components/NavBar.js","components/Map.js","components/RouterElement.js","components/HorizontalScroller.js","components/VerticalScroller.js","reducers/postReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["setTitleOnload","title","type","payload","getYscrolled","e","String","target","updateDimensions","event","innerWidth","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","onChange","bind","assertThisInitialized","onSubmit","setState","value","preventDefault","addPost","_this2","react_default","a","createElement","View","style","backgroundColor","flexDirection","TextInput","editable","maxLength","multiline","numberOfLines","onChangeText","margin","borderColor","borderWidth","color","TouchableOpacity","onPress","height","alignItems","justifyContent","Text","fontSize","paddingBottom","Component","connect","dispatch","WholeContext","createContext","loading","date","page","seed","error","refreshing","perpage","screenHeight","yScrolled","currentTitle","todo","List","items","_this$context","context","ScrollView","flex","map","_ref","i","complete","key","onClick","textDecoration","contextType","React","memo","name","require","Header","componentWillMount","tempObject","window","componentWillUnmount","removeEventListener","nextProps","console","log","addEventListener","accessibilityRole","styles","headerContainer","id","StyleSheet","create","posts","width","bindActionCreators","Posts","newPost","unshift","postItems","post","item","fetchPosts","fetch","then","res","json","PostForm","body","defineProperty","createPost","postData","method","headers","content-type","JSON","stringify","components_Posts","components_Form","CatalogueScreen","nextState","prevProps","prevState","react_router_dom","to","CategoryScreen","ProductScreen","Nav","createSwitchNavigator","catalogue","category","product","defaultNAvigationOptions","headerStyle","Navigator","createBrowserApp","box","_box","borderRadius","link","textDecorationLine","NavBar","href","MAPBOX_ACCESS_TOKEN","credentials","resulst","catch","err","initialViewState","longitude","latitude","zoom","pitch","bearing","data","sourcePosition","targetPosition","layers","LineLayer","Window","innerheight","deckgl","viewState","controller","esm","mapboxApiAccessToken","RouterElement","react_router","exact","path","component","Home","Todo","components_NavBar","HorizontalScroller","Dimensions","get","componentDidMount","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","className","contentContainer","display","textAlign","container","contentBox","_contentBox","paddingTop","borderTopWidth","borderBottomWidth","padding","VerticalScroller","yScroll","makeRemoteRequest","_this$state","url","concat","results","toConsumableArray","Math","floor","handleRefresh","makeRemoteRequeset","handleLoadMore","renderSeparator","marginLeft","renderHeader","renderFooter","paddingVertical","ActivityIndicator","animating","size","handleScroll","obj","nativeEvent","contentOffset","y","render","objectSpread","components_HorizontalScroller","FlatList","onScroll","renderItem","first","last","email","initialState","yscrolled","combineReducers","arguments","length","undefined","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_Header","components_RouterElement","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1aaac11c.chunk.js","sourcesContent":["import {Dimensions} from 'react-native'\nexport const fetchPosts = () => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(res => res.json())\n    .then(posts =>\n      dispatch({\n        type: 'FETCH_POSTS',\n        payload: posts\n      })\n    );\n};\nexport const setTitleOnload = (title) => {\n  \n   return({\n     type: 'SET_TITLE',\n     payload: title\n   })\n  }\n\nexport const getYscrolled=(e)=>{\n    var payload=String(e.target)\n    return({\n      type:'GET_Y_SCROLLED',\n      payload:payload\n    })\n}\n\nexport const updateDimensions =(event) =>{\n  //var width= Math.floor(Dimensions.get('window').width)\n        //console.log('width received is'+event.target.innerWidth)\n        return({\n          type:'SET_WIDTH',\n          payload:event.target.innerWidth\n        })\n}\nexport const createPost = (postData) => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(postData)\n  })\n    .then(res => res.json())\n    .then(post =>\n      dispatch({\n        type: 'NEW_POST',\n        payload: post\n      })\n    );\n};\nexport const addPost = (text) => dispatch => {\n  //console.log(text)\n    dispatch({\n      type: 'ADD_POST',\n      payload: text\n    }) \n};\nexport const setTitle = (title) => dispatch => {\n  //console.log(title)\n  dispatch({\n    type: 'SET_TITLE',\n    payload: title\n  })\n\n};","import React, {Component,useState,memo} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {addPost} from '../actions/postActions'\nimport {TextInput,View,TouchableOpacity,Text} from 'react-native'\n// import {WholeContext} from \"../WholeContext\"\n// export default function Form(props){\n//     const [value, setValue]=useState('');\n\n//     function handleAdd(e){\n//         e.preventDefault();\n//         props.onAdd(value);\n//     }\n//     function handleChange(e){\n//         setValue(e.target.value)\n//     }\n//     return(\n//         <form>\n//             <input\n//                 type = 'text'\n//                 placeholder='Add Todo'\n//                 value={value}\n//                 onChange={handleChange}\n//             />\n//             <button onClick={handleAdd}>Add</button>\n//         </form>\n//     )\n// }\n\nclass Form extends Component {\n    // static contextType = WholeContext;\n  \n    // state = {\n    //   text: \"\"\n    // };\n  \n    constructor (props){\n      super(props)\n      this.state={\n          text:''\n      }\n      \n      this.onChange= this.onChange.bind(this)\n      this.onSubmit = this.onSubmit.bind(this)\n    }\n    onChange(e){\n      this.setState({text:e.target.value})\n    }\n    onSubmit(e){\n      e.preventDefault();\n      const text= {\n        text: this.state.text\n      }\n      this.props.addPost(text)\n      this.setState({text:\"\"})\n    }\n    render() {\n      // const { text } = this.state;\n      // const { todo,dispatch } = this.context;\n  \n      return (\n        // <form\n        //   onSubmit={this.onSubmit}\n        // >\n        //   <input\n        //     value={this.state.text}\n        //     onChange={this.onChange}\n        //   />\n        //   <input type=\"submit\" value=\"Add\" />\n        // </form>\n        <View style={{\n          backgroundColor: this.state.text,\n          //borderBottomColor: '#ffffff',\n          //borderBottomWidth: 1 ,\n          flexDirection:\"column\",\n          //flex:2\n        }}\n        >\n          <TextInput \n            editable = {true}\n            maxLength = {40}\n            multiline = {true}\n            numberOfLines = {4}\n            onChangeText={(text) => this.setState({text})}\n            value={this.state.text}\n            onChange={this.onChange}\n            style={{\n              margin:1,\n              borderColor:'#cfcfcf',\n              borderWidth:1,\n              // shadowColor: 'rgba(1, 1, 1, 1)',\n              // shadowOffset: {width: 0, height: 0},\n              // shadowRadius: 1,\n              color:'black',\n              // textShadowColor: 'rgba(1, 1, 1, 1)',\n              // textShadowOffset: {width: 0, height: 0},\n              // textShadowRadius: 5\n            }}\n          />\n          <TouchableOpacity\n            onPress={this.onSubmit}\n            style={{\n              height:22,\n              backgroundColor:'#ffffff',\n              alignItems:'center',\n              justifyContent:'center',\n              margin:1,\n              borderColor:'#cfcfcf',\n              borderWidth:1,\n              //shadowColor: 'rgba(1, 1, 1, 1)',\n              //shadowOffset: {width: 0, height: 0},\n              //shadowRadius: 20\n            }}\n          >\n            <Text style={{\n              color:'black',\n              fontSize:12,\n              paddingBottom:2,\n              //textShadowColor: 'rgba(1, 1, 1, 1)',\n              //textShadowOffset: {width: 0, height: 0},\n              //textShadowRadius: 20,\n            }}>add</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n  }\n  Form.propTypes={\n    addPost:PropTypes.func.isRequired\n  }\n  export default connect(null,{addPost})(Form)","import { createContext } from \"react\";\n\nexport const WholeContext = createContext({\n    loading:false,\n    date:[],\n    page:1,\n    seed:1,\n    error:null,\n    refreshing:false,\n    perpage:50,\n    screenHeight:0,\n    yScrolled:0,\n    currentTitle:\"\",\n    todo:[]\n});","//import React,{useState, useEffect} from 'react'\nimport React, { useContext,memo,Component } from \"react\";\nimport {WholeContext} from \"../WholeContext\"\nimport {ScrollView,ListView,FlatList} from 'react-native'\n\nvar id =0\n// export default memo(() => {\n//     const { obj, dispatch } = useContext(WholeContext);\n    \n//     return (\n//       <ScrollView style={{flex:1}}>\n          \n//         {obj.obj.map(({ text, complete }, i) => (\n          \n//           <div\n//             key={i}\n//             onClick={() => {\n//               dispatch({ type: \"TOGGLE_COMPLETE\", i })\n//               console.log(WholeContext)\n//           }}\n//             style={{\n//               textDecoration: complete ? \"line-through\" : \"\"\n//             }}\n//           >\n//             {text}\n//           </div>\n          \n//         ))}\n        \n//         </ScrollView>\n//     );\n//   });\n  class List extends Component {\n    static contextType = WholeContext;\n  \n    state = {\n      items: []\n    };\n  \n    render() {\n      const { items } = this.state;\n      const { todo,dispatch } = this.context;\n  \n      return (\n        <ScrollView style={{flex:1}}>\n          \n        {items.map(({ todo, complete }, i) => (\n          \n          <div\n            key={i}\n            onClick={() => {\n              dispatch({ type: \"TOGGLE_COMPLETE\", i })\n          }}\n            style={{\n              textDecoration: complete ? \"line-through\" : \"\"\n            }}\n          >\n            {items}\n          </div>\n          \n        ))}\n        \n        </ScrollView>\n      );\n    }\n  }\n  export default React.memo(List)","import React,{useContext, useEffect,memo,Component} from 'react';\nimport {SafeAreaView, View, Text, StyleSheet,Animated,Dimensions} from 'react-native';\n//import '../css/header.css'\n//import {WholeContext} from \"../WholeContext\"\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setTitle, setTitleOnload, getYscrolled,updateDimensions } from '../actions/postActions';\nimport {bindActionCreators} from 'redux'\nvar {name} =require( '../../package.json')\nvar header_max_height = 22\nvar header_min_height = 22\nvar profile_max_height = 80\nvar profile_min_height = 13\n\n\nclass Header extends Component {\n\n    // getYscrolled(e){\n    //     this.setState({yScrollAnimation:e.target})\n    // }\n    \n    // updateDimensions =(e) =>{\n    //     this.setState(\n    //         {\n    //             width: Math.floor(\n    //                 Dimensions.get('window').width\n    //             )\n    //         }\n    //     )\n    // }\n    componentWillReceiveProps(nextProps) {\n        // You don't have to do this check first, but it can help prevent an unneeded render\n        // if (nextProps.startTime !== this.state.startTime) {\n        //     this.setState({ startTime: nextProps.startTime });\n        // }\n        console.log('this is from nextProps '+nextProps.title)\n      }\n    componentDidMount(){\n        \n\n        //console.log(name +\"is from componenetDidMount\")\n\n        this.props.setTitleOnload(name)\n        // window.addEventListener(\"resize\", this.props.updateDimensions(Math.floor(Dimensions.get('window').width)));\n        // window.addEventListener(\"orientationchange\",this.props.updateDimensions(Math.floor(Dimensions.get('window').width)));\n        //window.addEventListener(\"resize\", this.props.updateDimensions(window.innerWidth));\n        //window.addEventListener(\"orientationchange\",this.props.updateDimensions(window.innerWidth));\n        window.addEventListener(\"resize\", this.props.updateDimensions);\n        window.addEventListener(\"orientationchange\",this.props.updateDimensions);\n    }\n    componentWillMount=()=>{\n        //console.log(Math.floor(Dimensions.get('window').width))\n        var tempObject = {target:window}\n        this.props.updateDimensions(tempObject);\n    }\n    componentWillUnmount=()=>{\n        //window.removeEventListener(\"resize\", this.props.updateDimensions(Math.floor(Dimensions.get('window').width)));\n        //window.removeEventListener(\"orientationchange\",this.props.updateDimensions(Math.floor(Dimensions.get('window').width)));\n        //window.removeEventListener(\"resize\", this.props.updateDimensions(window.innerWidth));\n        //window.removeEventListener(\"orientationchange\",this.props.updateDimensions(window.innerWidth));\n        window.removeEventListener(\"resize\", this.props.updateDimensions);\n        window.removeEventListener(\"orientationchange\",this.props.updateDimensions);\n    }\n    render(){\n        const title=String(this.props.title)\n        return(\n        <View accessibilityRole=\"heading\" style={styles.headerContainer}>\n            <div id='titleBar'>        \n                <div id='title' >\n                    {this.props.title}\n                </div>\n            </div>\n            <style>{`\n                #titleBar{\n                \n\n                    \n                    height:22px;\n                    -webkit-app-region:drag;\n                    background-color:rgb(256,256,256)\n                }\n                #title{\n                    \n                    \n                    font-size:14px;\n                    text-align: center;\n                    color:rgb(0, 0, 0);\n                    \n                    height:50px;\n                    padding-top:2px;\n                    -webkit-app-region:drag;\n                    -moz-user-select: -moz-none;\n                    -khtml-user-select: none;\n                    -webkit-user-select: none;\n                    -ms-user-select: none;\n                    user-select: none;\n\n                }\n            `}\n            </style>\n        </View>\n        )\n    }\n    \n};\n\nconst styles = StyleSheet.create({\n    headerContainer: {\n//     backgroundColor:'#ffffff',\n//     width:'100vw',\n//     height:header_max_height,\n//     display:'flex',\n// //    textAlign:'center',\n//     alignItems:'center',\n//     justifyContent:'center',\n//     borderWidth:2,\n//     //padding:1,\n//     borderColor:'black',\n//     margin:1,\n//     // borderColor:'#cfcfcf',\n//     // borderWidth:1,\n//     shadowColor: 'rgba(1, 1, 1, 1)',\n//     shadowOffset: {width: -1, height: 0},\n//     shadowRadius: 2\n    flex:1,\n    margin:1,\n    borderColor:'#cfcfcf',\n    borderWidth:1,\n    //shadowColor: 'rgba(1, 1, 1, 1)',\n    //shadowOffset: {width: 0, height: 0},\n    //shadowRadius: 20,\n    backgroundColor:'#ffffff',\n    alignItems:'center',\n    justifyContent:'space-evenly',\n    },\n    // title: {\n    // fontSize: 19,\n    // fontWeight: '600',\n    // textAlign: 'center',\n    // color: 'black'\n    // },\n});\nHeader.propTypes={\n    setTitleOnload:PropTypes.func.isRequired,\n    title:PropTypes.string,\n    width:PropTypes.number,\n}\nconst mapStateToProps= state=>({\n    title:state.posts.title,\n    width:state.posts.width\n})\nconst matchDispatchToProps=dispatch=>{\n    return bindActionCreators({\n        setTitleOnload:setTitleOnload,\n        getYscrolled:getYscrolled,\n        updateDimensions:updateDimensions\n    \n    },dispatch)\n}\n//export default memo(connect(mapStateToProps,{setTitle})(Header))\nexport default connect(mapStateToProps,matchDispatchToProps)(Header)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\nimport {View,Text,StyleSheet} from 'react-native';\n\n\n  \n  const mapStateToProps = state => ({\n    posts: state.posts.items,\n    newPost: state.posts.item\n  });\n\nclass Posts extends Component {\n  componentWillMount() {\n    //this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    \n    const postItems = this.props.posts.map((post, i)=>\n      <View key={i} style={{\n\n      }}>\n        <Text style={{\n          color:'black',\n          // textShadowColor: 'rgba(1, 1, 1, 1)',\n          // textShadowOffset: {width: 0, height: 0},\n          // textShadowRadius: 20\n          }}>{post}</Text>\n      </View>\n    );\n  \n    return (\n      <View style={{\n        margin:1,\n        borderColor:'#cfcfcf',\n        borderWidth:1,\n        // shadowColor: 'rgba(1, 1, 1, 1)',\n        // shadowOffset: {width: 0, height: 0},\n        // shadowRadius: 20,\n        }}>\n        {postItems}\n      </View>\n    );\n    \n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(Posts);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions/postActions';\n\n\n  \nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: ''\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const post = {\n      title: this.state.title,\n      body: this.state.body\n    };\n\n    this.props.createPost(post);\n    this.setState({title:\"\"})\n    this.setState({body:\"\"})\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Add Post</h1>\n        <form onSubmit={this.onSubmit}>\n          <div>\n            <label>Title: </label>\n            <br />\n            <input\n              type=\"text\"\n              name=\"title\"\n              onChange={this.onChange}\n              value={this.state.title}\n            />\n          </div>\n          <br />\n          <div>\n            <label>Body: </label>\n            <br />\n            <textarea\n              name=\"body\"\n              onChange={this.onChange}\n              value={this.state.body}\n            />\n          </div>\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nPostForm.propTypes = {\n    createPost: PropTypes.func.isRequired\n};\n\nexport default connect(null, { createPost })(PostForm);","import React, {useReducer,useState,useEffect,memo} from 'react'\nimport Form from './Form'\nimport List from './List'\nimport Header from './Header'\nimport Posts from './Posts'\nimport Postform from './Postform'\n//import ListView from 'react'\n// var i=1\n//  export default function Todo(props){\n\n//   console.log(props.items)\n//   const [items, setItems]=useState(props.items);\n\n  \n//   useEffect(()=>{\n//     props.itemsChanged(items);\n\n//   },[items])\n//   function handleOnAdd(value){\n//     setItems([...items,\n//         {\n//           id:i++,\n//           text:value\n//         } \n//       ])\n      \n    \n//   }\n//   function handleOnDelete(id){\n   \n//     const index=items.findIndex((item)=>item.id===id);\n//       if(index !== -1){\n//         items.splice(index, 1)\n//         setItems(\n//           [\n//             ...items\n//           ]\n//         )\n//       }\n//   }\n  \n//    return(\n//     <div className='todo'>\n//       <Form onAdd = {handleOnAdd}/>\n//       <List items = {items} onDelete={handleOnDelete}/>\n//     </div>\n//    )\n   \n//   /*\n//   return(\n//     <div className='todo'>\n//       <Header/>\n//     </div>\n//    )\n//    */\n//  }\nexport default memo(() => {\n  return (\n    <div>\n      \n      <Posts/>\n      <Form />\n   \n        {/* <List /> */}\n        {/* <Posts/> */}\n    </div>\n  );\n});\n// export default ()=>{\n//   return (\n//     <div>\n//       <Postform />\n//       <hr />\n//       <Posts />\n//     </div>\n//   )\n// }","import React, {memo} from 'react'\nimport {Text,View} from 'react-native'\nconst Home = () => (\n  <View style={{\n    margin:1,\n    borderColor:'#cfcfcf',\n    borderWidth:1,\n    // shadowColor: 'rgba(1, 1, 1, 1)',\n    // shadowOffset: {width: 0, height: 0},\n    // shadowRadius: 20,\n    backgroundColor:'#ffffff',\n    alignItems:'center',\n    justifyContent:'space-evenly',\n  }}>\n  <Text style={{          \n  \n      height:22,\n \n      flexDirection:'row',\n      flex:1,\n      fontSize:12,\n \n      color:'black',\n      // textShadowColor: 'black',\n      // textShadowOffset: {width: 0, height: 0},\n      // textShadowRadius: 20\n    }}>\n    Home\n  </Text>\n  </View>\n)\n\nexport default memo(Home)\n","import React,{memo }from 'react'\nimport {Text,View} from 'react-native'\nconst NoMatch = () => (\n  <View style={{\n    margin:1,\n    borderColor:'#cfcfcf',\n    borderWidth:1,\n    // shadowColor: 'rgba(1, 1, 1, 1)',\n    // shadowOffset: {width: 0, height: 0},\n    // shadowRadius: 20,\n    backgroundColor:'#ffffff',\n    alignItems:'center',\n    justifyContent:'space-evenly',\n    height:22\n  }}>\n  <Text style={{          \n  \n      height:50,\n \n      flexDirection:'row',\n      flex:1,\n      fontSize:12,\n \n      color:'black',\n      // textShadowColor: 'black',\n      // textShadowOffset: {width: 0, height: 0},\n      // textShadowRadius: 20\n    }}>\n    No Match\n  </Text>\n  </View>\n)\n\nexport default memo(NoMatch)\n","import React, {Button, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nclass CatalogueScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    catalogue\n                </div>\n                <Link id=\"linkCategory\" to=\"/Category\">Category</Link><br/>\n                <Link id=\"linkProduct\" to=\"/Product\">Product</Link><br/>\n                \n            </div>\n            \n        );\n    }\n}\n\nCatalogueScreen.propTypes = {\n\n};\n\nexport default CatalogueScreen;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nclass CategoryScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    category\n                </div>\n                <Link id=\"Product\" to=\"/Product\">Product</Link><br/>\n                <Link id=\"Catalouge\" to=\"/Catalogue\">Catalogue</Link><br/>\n            </div>\n        );\n    }\n}\n\nCategoryScreen.propTypes = {\n\n};\n\nexport default CategoryScreen;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nclass ProductScreen extends Component {\n    render() {\n        return (\n            <div>\n                <div>product</div>\n                <Link id=\"Catalouge\" to=\"/Catalogue\">Catalogue</Link><br/>\n                <Link id=\"Category\" to=\"/Category\">Category</Link><br/>\n            </div>\n        );\n    }\n}\n\nexport default ProductScreen;","import React,{memo} from 'react';\n//import { createStackNavigator, createAppContainer } from '@react-navigation/native';\n// import { CatalogueScreen, \n//          CategoryScreen, \n//          ProductScreen,  \n//          SearchScreen,\n//          SearchResultsScreen,\n//          BagScreen } from './screens';\nimport {createSwitchNavigator,createBottomTabNavigator} from \"@react-navigation/core\"\nimport {createBrowserApp} from \"@react-navigation/web\"\nimport CatalogueScreen from './screens/CatalogueScreen'\nimport CategoryScreen from './screens/CategoryScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport SearchScreen from './screens/SearchScreen'\nimport SearchResultsScreen from './screens/SearchResultsScreen'\nimport BagScreen from './screens/BagScreen'\n//import Ionicons from 'react-native-vector-icons/Ionicons';\n\n\n\n\nconst Nav = createSwitchNavigator({\n   catalogue: CatalogueScreen,\n    category: CategoryScreen,\n     product: ProductScreen\n}, {\n    //configuration options...\n    defaultNAvigationOptions:{\n        headerStyle:{\n            backgroundColor:'orange'\n        }\n    }\n});\nconst Navigator = createBrowserApp(Nav)\n// const Navigator = createDrawerNavigator({\n//     SearchHome: SearchScreen,\n//  SearchResults: SearchResultsScreen\n// }, {\n//   //configuration options...\n// });\n \n//export default createBrowserApp(Navigator)\n\nexport default memo(Navigator)\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                Search\n            </div>\n        );\n    }\n}\n\nSearchScreen.propTypes = {\n\n};\n\nexport default SearchScreen;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchResultsScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                searchResult\n            </div>\n        );\n    }\n}\n\nSearchResultsScreen.propTypes = {\n\n};\n\nexport default SearchResultsScreen;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass BagScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                bagscreen\n            </div>\n        );\n    }\n}\n\nBagScreen.propTypes = {\n\n};\n\nexport default BagScreen;","import React from 'react'\n//import { Link } from 'react-router-dom'\nimport { BrowserRouter,HashRouter, Route, Link,Router,Switch } from \"react-router-dom\";\nimport {ScrollView} from 'react-native'\nimport Navigator from './Navigator'\nimport Catalogue from './screens/CatalogueScreen'\nimport Category from './screens/CategoryScreen'\nimport Product from './screens/ProductScreen'\nimport {SafeAreaView,KeyboardAvoidingView,View,StyleSheet} from 'react-native'\nconst NavBar = () => (\n  // <SafeAreaView>\n  //     <KeyboardAvoidingView             \n  //     style={{\n  //       height:22,\n  //       //backgroundColor:'#666666',\n  //       alignItems:'center',\n  //       justifyContent:'space-evenly',\n  //       flexDirection:'row',\n  //       flex:1,\n  //       fontSize:12,\n  //       margin:1,\n  //       borderColor:'#cfcfcf',\n  //       borderWidth:0,\n  //       // shadowColor: 'rgba(1, 1, 1, 1)',\n  //       // shadowOffset: {width: 0, height: 0},\n  //       // shadowRadius: 20,\n  //       backgroundColor:'#ffffff'\n  //     }}\n  //   >\n      <View style={{\n              height:22,\n              //backgroundColor:'#666666',\n              alignItems:'center',\n              justifyContent:'space-evenly',\n              flexDirection:'row',\n              flex:1,\n              fontSize:12,\n              margin:1,\n              borderColor:'#cfcfcf',\n              borderWidth:0,\n              // shadowColor: 'rgba(1, 1, 1, 1)',\n              // shadowOffset: {width: 0, height: 0},\n              // shadowRadius: 20,\n              backgroundColor:'#ffffff'\n            }}>\n   \n        <View style={styles.box} >\n          <a id=\"linkLogin\" href=\"/login\" style={{color:'black', textDecorationLine:'none',borderColor:'black',borderWidth:2 }}>Login</a><br/>\n        </View>\n        {/* <View style={styles.box}>\n          <Link id=\"linkHome\" to=\"/\" style={{color:'black', textDecorationLine:'none',borderColor:'black',borderWidth:2}}>Home</Link><br/>\n        </View> */}\n        <View style={styles.box}>\n          <Link id=\"linkTodo\" to=\"/todo\" style={{color:'black', textDecorationLine:'none',borderColor:'black',borderWidth:2}}>Todo</Link><br/>\n        </View>\n        {/* <View style={styles.box}>\n          <Link id=\"linkMap\" to=\"/map\" style={{color:'black', textDecorationLine:'none',borderColor:'black',borderWidth:2}}>Map</Link><br/>\n        </View>\n       */}\n          \n      \n      </View>\n  //   </KeyboardAvoidingView>\n  // </SafeAreaView>\n)\nconst styles = StyleSheet.create({\n  \n    box:{\n      margin:0,\n      //padding:1,\n      height:22,\n      backgroundColor:'#ffffff',\n      alignItems:'center',\n      justifyContent:'center',\n      flexDirection:'row',\n      flex:1,\n      fontSize:12,\n      borderColor:'black',\n      borderRadius:2,\n      color:'black',\n      fontSize:12,\n      // textShadowColor: 'rgba(1, 1, 1, 1)',\n      // textShadowOffset: {width: 0, height: 0},\n      // textShadowRadius: 20,\n      borderColor:'#cfcfcf',\n      borderWidth:1,\n    },\n    link:{\n      color:'black', \n      textDecorationLine:'none',\n      borderColor:'black',\n      borderWidth:1 \n    }\n        \n})\nexport default NavBar\n","import React,{memo} from 'react'\nimport DeckGL from '@deck.gl/react'\nimport {LineLayer} from '@deck.gl/layers'\nimport {StaticMap} from 'react-map-gl'\n// import {Header} from './Header'\n// import {NavBar} from './NavBar'\nimport{View} from 'react-native'\n//var vari = require('../expressServer/keysconfig');\n//console.log(process.env.NODE_ENV)\n//console.log(\"MAPBOX : \"+process.env.MAPBOX_ACCESS_TOKEN)\n//const MAPBOX_ACCESS_TOKEN = vari.MAPBOX_ACCESS_TOKEN\n//const MAPBOX_ACCESS_TOKEN='pk.eyJ1IjoiYmdhbXV0IiwiYSI6ImNqd2hnMjAzdDFranI0M25wNnA1ZHEwanIifQ.cKnGSJ4UAFehcj43UU_lRA'\n//const MAPBOX_ACCESS_TOKEN = process.env.MAPBOX_ACCESS_TOKEN\n//const MAPBOX_ACCESS_TOKEN = \"MAPBOX_ACCESS_TOKEN_STRING\"\nlet MAPBOX_ACCESS_TOKEN=\"\"\nfetch('https://squwbs.herokuapp.com/mapboxtoken', {\n    credentials: \"include\"\n  })\n.then(resulst=>{\n  return resulst.json()\n})\n.then((json)=>{\nMAPBOX_ACCESS_TOKEN=json.MAPBOX_ACCESS_TOKEN\nconsole.log(json)\n})\n.catch((err)=>{\n\n})\nconst initialViewState={\n    longitude: -122.41669,\n    latitude:37.7853,\n    zoom:13,\n    pitch:0,\n    bearing:0\n}\nconst data = [{sourcePosition:[-122.41669,37.7853],targetPosition:[-122.41669,37.781]}]\nfunction Map (props){\n    const layers=[\n        new LineLayer({id:'line-layer',data})\n    ]\n\n    return(\n        <View style={{height:Window.innerheight-44}}>\n            <DeckGL \n                viewState={initialViewState} \n                controller={true}\n                layers={layers} >\n            <StaticMap mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}/>\n            </DeckGL>\n        </View>\n    )\n    // return(\n    //     <DeckGL \n    //         viewState={initialViewState} \n    //         controller={true}\n    //         layers={layers} >\n    //     <StaticMap mapboxApiAccessToken={props.mapbox_access_token}/>\n    //     </DeckGL>\n    // )\n    \n}\nexport default memo(Map)","import React, { Component,memo } from 'react';\nimport { BrowserRouter,HashRouter, Route, Link,Router,Switch } from \"react-router-dom\";\nimport NavBar from './NavBar'\nimport Todo from './Todo'\nimport Home from './Home'\nimport NoMatch from './NoMatch'\n// import Map from './Map'\n// import Catalogue from './screens/CatalogueScreen'\n// import Category from './screens/CategoryScreen'\n// import Product from './screens/ProductScreen'\n// class RouterElement extends Component {\n//     render() {\n//         return (\n//             <BrowserRouter>\n//                 <Switch>\n//                     <Route exact path=\"/\" component={Home} />\n//                     <Route exact path=\"/todo\" render={()=><Todo itemsChanged={handleItems} items={state.items}/>}>\n//                     </Route>\n//                     <Route exact path=\"/map\" component={Map}/>\n//                     <Route component={NoMatch} />\n//                 </Switch>\n//                 <NavBar />\n//             </BrowserRouter>\n//         );\n//     }\n// }\nclass RouterElement extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/todo\" component={Todo}/>\n                    {/* <Route exact path=\"/map\" component={Map}/>\n                    <Route exact path=\"/Catalogue\" component={Catalogue} />\n                    <Route exact path=\"/Category\" component={Category}/>\n                    <Route exact path=\"/Product\" component={Product}/>\n                    <Route component={NoMatch} /> */}\n                </Switch>\n                <NavBar />\n            </BrowserRouter>\n        );\n    }\n}\nexport default memo(RouterElement);","import React,{memo, Component,useContext} from 'react'\nimport {StyleSheet, Text, View, ScrollView, Dimensions} from 'react-native'\nimport {WholeContext} from \"../WholeContext\"\n\nclass HorizontalScroller extends Component{\n    static contextType = WholeContext;\n    state = {\n        width:0\n      };\n    // styles = StyleSheet.create({\n    //     contentContainer:{\n    //         backgroundColor:'#F5FCFF',\n    //         width:100%\n    //     },\n    //     container:{\n    //         flex:1,\n    //         backgroundColor:'#F5F5F5',\n    //         width:this.state.width\n    //     },\n    //     contentBox:{\n    //         flex:1,\n    //         margin:20,\n    //         backgroundColor:'orange',\n    //         margin:10,\n    //         textAlign:'center',\n    //         fontSize:20,\n    //         padding:100\n    //     }\n    // })\n    componentDidMount(){\n         \n    }\n    updateDimensions =(e) =>{\n        this.setState(\n            {\n                width: Dimensions.get('window').width\n            }\n        )\n    }\n    componentDidMount=()=>{\n        window.addEventListener(\"resize\", this.updateDimensions);\n        window.addEventListener(\"orientationchange\",this.updateDimensions);\n    }\n    componentWillMount=()=>{\n        this.updateDimensions();\n    }\n    componentWillUnmount=()=>{\n        window.removeEventListener(\"resize\", this.updateDimensions);\n        window.removeEventListener(\"orientationchange\",this.updateDimensions);\n    }\n    render(){\n        \n        return(\n            <View id = 'outerContainer1' >\n\n                <ScrollView id='outerContainer2'horizontal={true}  showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false}>\n                    <div className='container'> \n                        <p className='contentBox'> sample text 1 </p>\n                    </div>\n                    <div className='container'> \n                        <p className='contentBox'> sample text 2 </p>\n                    </div>\n                    <div className='container'> \n                        <p className='contentBox'> sample text 3 </p>\n                    </div>\n                </ScrollView>\n                <style>{`\n                    .container{\n                    \n                        background-color:#ffffff;\n                        width:100vw;\n                        -webkit-app-region:drag;\n                    }\n                    #outerContainer1{\n\n                        background-color:white;\n                        width:100vw;\n                        \n                    }\n                    #outerContainer2{\n\n                        background-color:white;\n                        width:100vw;\n                        \n                    }\n                    .contentBox{\n                        text-align: center;\n                        display:flex;\n                        background-color:#333333;\n                        height:25vw;\n                        color:black;\n                        margin:2px;\n                    }\n                `}\n                </style>\n            </View>\n        )\n    }\n}\nconst styles = StyleSheet.create({\n    contentContainer:{    \n        backgroundColor:'#F5FCFF',\n        width:'100vw',\n        display:'flex',\n        textAlign:'center',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n    container:{\n        flex:1,\n        backgroundColor:'#F5F5F5'\n    },\n    contentBox:{\n        flex:1,\n        margin:20,\n        color:'black',\n        backgroundColor:\"rgb(30, 30, 30)\",\n        margin:10,\n        textAlign:'center',\n        fontSize:20,\n        padding:100\n    }\n})\nexport default memo(HorizontalScroller)","import React , {Component, useContext} from 'react'\nimport {View, Text, FlatList,ActivityIndicator,StyleSheet,Dimensions} from 'react-native'\nimport {WholeContext} from \"../WholeContext\"\nimport HorizontalScroller from './HorizontalScroller'\n//import {List,ListItem,SearchBar} from \"react-native-elements\"\nvar screenHeight=0\nconst styles = StyleSheet.create({\n    container: {\n    flex: 1,\n    paddingTop: 22,\n    borderTopWidth: 0, \n    borderBottomWidth: 0,\n    width:'100vw',\n    },\n    item: {\n      padding: 10,\n      fontSize: 18,\n      height: 44,\n    },\n  })\nclass VerticalScroller extends Component{\n    \n\n    static contextType = WholeContext;\n    \n    state = {\n        loading:false,\n        date:[],\n        page:1,\n        seed:1,\n        error:null,\n        refreshing:false,\n        perpage:50,\n        height:0,\n        yScroll:0\n    };\n\n    makeRemoteRequest = ()=>{\n        const {page, seed,perpage} = this.state\n        const url=`https://randomuser.me/api/?seed=${seed}&page=${page}&results=${perpage}`\n        this.setState({loading:true})\n        fetch(url)\n        .then(res => res.json())\n        .then(res => {\n          this.setState({\n            data: page === 1 ? res.results : [...this.state.data, ...res.results],\n            error: res.error || null,\n            loading: false,\n            refreshing: false\n          });\n        })\n        .catch(error => {\n          this.setState({ error, loading: false });\n        });\n    }\n    updateDimensions =(e) =>{\n        this.setState(\n            {\n                height: Math.floor(\n                    Dimensions.get('window').height-100\n                )\n            }\n        )\n    }\n    componentDidMount=()=>{\n        this.makeRemoteRequest();\n        //console.log('componenet mounted' +Math.floor(Dimensions.get('window').height/3))\n        window.addEventListener(\"resize\", this.updateDimensions);\n        window.addEventListener(\"orientationchange\",this.updateDimensions);\n        //this.setState({ height: Math.floor(Dimensions.get('window').height/3)});\n        \n    }\n    componentWillMount=()=>{\n        //this.setState({ screenHeight: Dimensions.get('window').height});\n        //console.log('componenet updated' +this.state.screenHeight)\n        this.updateDimensions();\n    }\n    componentWillUnmount=()=>{\n        window.removeEventListener(\"resize\", this.updateDimensions);\n        window.removeEventListener(\"orientationchange\",this.updateDimensions);\n    }\n    handleRefresh=()=>{\n        this.setState(\n            {\n                page:1,\n                seed:this.state.seed+1,\n                refreshing:true\n            },\n            ()=>{\n                this.makeRemoteRequeset();\n            }\n        )\n    }\n    handleLoadMore=()=>{\n        this.setState(\n            {\n                page:this.state.page+1\n\n            },\n            ()=>{\n                this.makeRemoteRequest();\n            }\n        )\n    }\n    renderSeparator=()=>{\n        return(\n            <View\n                style={{\n                    height:1,\n                    width:\"86%\",\n                    backgroundColor:\"#CED0CE\",\n                    marginLeft:\"14%\"\n                }}\n            />\n        )\n    }\n    renderHeader = () =>{\n        return < input value=\"Type Here...\"/>\n    }\n    renderFooter = () => {\n        if (!this.state.loading) return null;\n    \n        return (\n          <View\n            style={{\n              paddingVertical: 20,\n              borderTopWidth: 1,\n              borderColor: \"#CED0CE\"\n            }}\n          >\n            <ActivityIndicator animating size=\"large\" />\n          </View>\n        );\n      };\n    handleScroll=(e)=>{\n        const {obj, dispatch } = this.context;\n        const { yScroll } = this.state\n        //console.log(e.nativeEvent.contentOffset.y)\n        this.setState({yScroll:e.nativeEvent.contentOffset.y})\n        dispatch({yScroll,type: \"Y_SCROLLED\"} )\n    }\n    render=() =>{\n    // return (\n    //     <List containerStyle={{ borderTopWidth: 0, borderBottomWidth: 0 }}>\n    //     <FlatList\n    //         data={this.state.data}\n    //         renderItem={({ item }) => (\n    //         <ListItem\n    //             roundAvatar\n    //             title={`${item.name.first} ${item.name.last}`}\n    //             subtitle={item.email}\n    //             avatar={{ uri: item.picture.thumbnail }}\n    //             containerStyle={{ borderBottomWidth: 0 }}\n    //         />\n    //         )}\n    //         keyExtractor={item => item.email}\n    //         ItemSeparatorComponent={this.renderSeparator}\n    //         ListHeaderComponent={this.renderHeader}\n    //         ListFooterComponent={this.renderFooter}\n    //         onRefresh={this.handleRefresh}\n    //         refreshing={this.state.refreshing}\n    //         onEndReached={this.handleLoadMore}\n    //         onEndReachedThreshold={50}\n    //     />\n    //     </List>\n    // );\n    //} \n        const { data } = this.state;\n        \n        //const {containerStyle ,itemStyle } = this.styles\n        //screenHeight=Math.floor(Dimensions.get('window').height/2)\n        //console.log(styles.container)\n        \n        return (\n            \n            <View style={{\n                \n                    ...styles.container,\n                    height:this.state.height\n    \n                }}>\n            <HorizontalScroller/>\n            <FlatList\n                data={data}\n                showsHorizontalScrollIndicator={false}\n                onScroll={\n                    this.handleScroll\n                    \n                }\n                renderItem={({ item }) => \n                    <div>\n                        <Text style={styles.item}>{item.name.first} {item.name.last}</Text>\n                        <Text style={styles.item}>{item.email}</Text>\n                    </div>\n                }\n                \n            />\n\n            </View>\n        )\n    }  \n}\n\nexport default React.memo(VerticalScroller)","const initialState = {\n  items: [],\n  item: {},\n  title:'',\n  width:0,\n  text:[],\n  yscrolled:0\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'FETCH_POSTS':\n      return {\n        ...state,\n        items: action.payload\n      };\n    case 'NEW_POST':\n      return {\n        ...state,\n        item: action.payload\n      };\n    case 'ADD_POST':\n      //console.log(...state.text)\n      return {\n        ... state,\n        items:[...state.items,action.payload.text]\n      };\n    case 'SET_TITLE':\n      \n      console.log('set title from reducer'+action.payload)\n      return {\n        ...state,\n        title: action.payload\n      };\n    case 'GET_Y_SCROLLED':\n      \n        console.log('get_y_scrolled from reducer'+action.payload)\n        return {\n          ...state,\n          yscrolled: action.payload\n        };\n    case 'SET_WIDTH':\n      \n      console.log('width received is'+action.payload)\n      return {\n        ...state,\n        width: action.payload\n      };\n    default:\n      return state;\n  }\n}","\nimport { combineReducers } from 'redux';\nimport postReducer from './postReducer';\n\nexport default combineReducers({\n  posts: postReducer\n});","\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;"," \n import React, {useReducer,useContext,useState,Component} from 'react'\n import Todo from './components/Todo'\n import './App.css'\n import Header from './components/Header';\n import { BrowserRouter,HashRouter, Route, Link,Router,Switch } from \"react-router-dom\";\n //import{IndexRedirect} from \"react-router\"\n import Home from './components/Home'\n import NoMatch from './components/NoMatch'\n import NavBar from './components/NavBar'\n import Map from './components/Map'\n import RouterElement from './components/RouterElement'\n import HorizontalScroller from './components/HorizontalScroller'\n import VerticalScroller from './components/VerticalScroller'\n //import Navigator from './components/Navigator'\n //import {name} from '/package.json'\n \n //var envs = require('./expressServer/keysconfig');\n//console.log(envs)\n//var dotenv= require('dotenv') ;\n//const result = dotenv.config();\n//console.log(dotenv.parse())\nimport {produce} from \"immer\"\nimport {WholeContext} from './WholeContext'\n//var {name} =require( '../package.json')\n\n// var toTitle=0\n// //  var i=1\n// // const object=React.createContext({})\n// // class App extends Component{\n\n// //   constructor(props){\n// //     super(props)\n// //     this.state={\n// //       items:[],\n// //     }\n// //     this.handleItems=(items)=>{\n// //       this.setState({items:[...items]})\n// //     }\n// //   }\n// //   // const [state, setState]=useState(\n// //   //   {items:[],\n// //   //   }\n// //   // )\n// //   // function handleItems(items){\n// //   //   setState({items:[...items]})\n// //   //   console.log(state)\n// //   // }\n// //   render(){\n// //     return (\n// //     <div>\n// //       <Header title = 'template'/>\n// //       <RouterElement/>\n// //     </div>\n// //     );\n// //   }\n    \n// //   }\n// //   export default App\n// function useImmerReducer(reducer, initialState)\n// {\n//   return React.useReducer(produce(reducer),initialState);\n// }  \n// const handleScroll = (input)=>{\n//   toTitle=input\n// }\n// const wholeReducer=(obj, action)=>{\n//   switch (action.type) {\n//     case \"ADD_TODO\":\n//         //obj.todo.unshift({ text: action.text, complete: false });\n        \n//         console.log({text:action.text,complete: false})\n//         return obj.todo.push({text:action.text,complete: false})\n//       //obj.unshift({ text: action.text, complete: false });\n//       //obj.push({ text: action.text, complete: false });\n//       //return;\n//       // return produce(obj, draftState=>{\n//       //   draftState.unshift({text:action.text, complete:false})\n//       // })\n      \n//     case \"TOGGLE_COMPLETE\":\n//       //obj.todo[action.i].complete = !obj.todo[action.i].complete;\n//       return;\n//     case \"RESET\":\n//       obj.todo=[];\n//       return;\n//     case \"SET_TITLE\":\n//       //console.log(obj)\n//       //console.log(action.title)\n//       obj.currentTitle=action.title\n//       document.title=action.title\n//       return;\n//     case \"Y_SCROLLED\":\n//       //console.log(obj)\n//       //obj.yScroll=action.yScroll\n//       obj.yScrolled=action.yScroll\n//       //this.handleScroll({yScrolled:action.yScroll})\n//       toTitle=action.yScroll\n//       console.log(obj.yScrolled)\n      \n//       return; \n//     default:\n//       return obj;\n//   }}\n\n\n// class App extends Component{\n//   //const [obj, dispatch] = useImmerReducer(wholeReducer, []);\n\n//   constructor(props){\n//     super(props)\n//     this.state=useContext(WholeContext)\n//   }\n//   //const [obj, dispatch] = useImmerReducer(wholeReducer, WholeContext);\n//   render(){\n//     return (\n    \n//       // <WholeContext.Provider value={{ obj, dispatch }}>\n//       <WholeContext.Provider value={this.state}>\n//         <Header title = {name} toTitle={toTitle}/>\n        \n//         <VerticalScroller/>\n//         <RouterElement/>\n//       </WholeContext.Provider>\n  \n//     );\n//   }\n\n\n\n// };\n// export default App\n\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport {setTitle} from './actions/postActions'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n//var {name} =require( '../package.json')\n\nclass App extends Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//         setTitle:this.props.setTitle\n//       };\n//       this.setTitle = this.setTitle.bind(this)\n// }\n//   componentDidMount(){\n//     console.log(name)\n//     setTitle(name);\n//   }\n  render(){\n    return(\n      <Provider store={store}>\n        <div className=\"App\" >\n          <Header/>\n          {/* <VerticalScroller/> */}\n          <RouterElement />\n        </div>\n      </Provider>\n    )\n  }\n}\nexport default App;\n// App.propTypes = {\n//   setTitle: PropTypes.func.isRequired\n// };\n// export default connect(null,{setTitle})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}